version: '3.6'

services:
  app:
    image: traefik:2.4
    command:
      - --ping
      - --accesslog=true
      - --accesslog.filters.statuscodes=400-599
      - --api=true
      - --api.dashboard=true
      # For access to Traefik dashboard via implicit "--entryPoints.traefik.address=:8080", uncomment:
      #- --api.insecure=true
      # For debugging, uncomment:
      #- --api.debug=true
      #- --log.level=DEBUG

      # For testing certificates, uncomment:
      #- --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      #- --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme-staging.json
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpChallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpChallenge.entryPoint=http-ext
      - --certificatesresolvers.letsencrypt.acme.email=${ADMIN_EMAIL}

      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.swarmMode=true
      - --providers.docker.network=proxy
      - --providers.docker.defaultRule=Host(`{{ normalize (index .Labels "com.docker.stack.namespace") }}.${DOMAIN}`)

      - --entryPoints.http.address=:80
      - --entryPoints.http.http.redirections.entryPoint.to=https
      - --entryPoints.http.http.redirections.entryPoint.permanent=true
      
      - --entryPoints.http-ext.address=:44080
      - --entryPoints.http-ext.http.redirections.entryPoint.to=https # Must redirect to :443 port
      - --entryPoints.http-ext.http.redirections.entryPoint.permanent=true

      - --entryPoints.https.address=:443
      - --entryPoints.https.http.tls.certresolver=letsencrypt

      - --entryPoints.https-ext.address=:44443
      - --entryPoints.https-ext.http.tls.certresolver=letsencrypt

      # Necessary for routing to back-ends with self-signed SSL certificates
      #- --serversTransport.insecureSkipVerify=true
    ports:
      - target: 8080
        published: 8080   # traefik
        protocol: tcp
        mode: host
      - target: 80
        published: 80     # http
        protocol: tcp
        mode: host
      - target: 443
        published: 443    # https
        protocol: tcp
        mode: host
      - target: 44080
        published: 44080  # http-ext
        protocol: tcp
        mode: host
      - target: 44443
        published: 44443  # https-ext
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
    networks:
      - proxy
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels:
        - "traefik.http.services.traefik-app.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik-app.entrypoints=https"
        - "traefik.http.routers.traefik-app.service=api@internal"

        #- "traefik.http.middlewares.internal-only.ipwhitelist.sourcerange=127.0.0.1/32, ${DOMAIN_CIDR}"

        #- "traefik.http.middlewares.reqAuth.forwardauth.address=https://auth.${DOMAIN}"
        #- "traefik.http.middlewares.reqAuth.forwardauth.authResponseHeaders=X-Forwarded-User"
        #- "traefik.http.middlewares.reqAuth.forwardauth.trustForwardHeader=true"

    healthcheck:
      test: traefik healthcheck --ping

volumes:
  letsencrypt:

networks:
  proxy:
    name: proxy
    external: true

